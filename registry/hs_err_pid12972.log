#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 730256 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:189), pid=12972, tid=13684
#
# JRE version: Java(TM) SE Runtime Environment (17.0.10+11) (build 17.0.10+11-LTS-240)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (17.0.10+11-LTS-240, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED --add-opens=java.base/java.nio.charset=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED -XX:MaxMetaspaceSize=384m -XX:+HeapDumpOnOutOfMemoryError -Xms256m -Xmx512m -Dfile.encoding=windows-1252 -Duser.country=US -Duser.language=en -Duser.variant -javaagent:C:\Java\gradle-8.5\lib\agents\gradle-instrumentation-agent-8.5.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 8.5

Host: Intel(R) Core(TM) i5-10400 CPU @ 2.90GHz, 12 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.804)
Time: Fri Mar 15 16:23:08 2024 SE Asia Standard Time elapsed time: 17.160633 seconds (0d 0h 0m 17s)

---------------  T H R E A D  ---------------

Current thread (0x000002403da4b350):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=13684, stack(0x000000fb92600000,0x000000fb92700000)]


Current CompileTask:
C2:  17160 3880       4       org.objectweb.asm.Frame::execute (2318 bytes)

Stack: [0x000000fb92600000,0x000000fb92700000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x677a5a]
V  [jvm.dll+0x7d8b2d]
V  [jvm.dll+0x7da48e]
V  [jvm.dll+0x7daaf3]
V  [jvm.dll+0x2455ff]
V  [jvm.dll+0xaaafb]
V  [jvm.dll+0xab09c]
V  [jvm.dll+0x2aafef]
V  [jvm.dll+0x57fd55]
V  [jvm.dll+0x220472]
V  [jvm.dll+0x219070]
V  [jvm.dll+0x216c79]
V  [jvm.dll+0x1a3410]
V  [jvm.dll+0x226aeb]
V  [jvm.dll+0x224cab]
V  [jvm.dll+0x78e45c]
V  [jvm.dll+0x78888a]
